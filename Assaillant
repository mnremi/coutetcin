class Assaillant {
  // Attributs par défaut d'un objet "Assaillant"
  int a_posx = width;
  int a_posy;
  int a_width = 100;
  int a_height = 100;
  int a_random = 0 ;
  float a_vitesse;

  // Constructeur d'un objet "Assaillant"
  Assaillant(int posy, int vitesse) {
    this.a_posy = posy;
    this.a_vitesse = vitesse;
    // Entier assignant un sprite aléatoirement
    this.a_random = ceil(random(0, 4));
  }

  // Méthode d'affichage
  void affichage() {
    this.a_posx -= a_vitesse;
    // Détection de sortie de mur
    if (a_posx < 0) {
      defaite = true;
      ingame = false;
    }

    fill(125);   
    sprite();
  }

  // Méthode de vérification de collision
  void collision(int a_indice) {
    for (int i = 0; i < tirs.size(); i++) {
      // Récupère les attributs de l'objet "Tir"
      int t_x = tirs.get(i).t_posx;
      int t_y = tirs.get(i).t_posy;
      int t_width = tirs.get(i).t_width;
      int t_height = tirs.get(i).t_height;

      if (a_posx <= t_x + t_width)
        for (int tir_y = t_y; tir_y < t_y + t_height; tir_y++)
          if (tir_y >= a_posy && tir_y <= a_posy + a_height) {
            // S'il y a collision, activation du son et destruction des objets "Assaillant" et "Tir" concernés
            son_boom.play(i);
            assaillants.remove(a_indice);
            objectif -= 1;
            tirs.remove(i);
            
            // Affichage du sprite de destruction
            if (a_random == 1) image(a_tab1[2], a_posx, a_posy, a_width, a_height);
            if (a_random == 2) image(a_tab2[2], a_posx, a_posy, a_width, a_height);
            if (a_random == 3) image(a_tab3[2], a_posx, a_posy, a_width, a_height);
            if (a_random == 4) image(a_tab4[2], a_posx, a_posy, a_width, a_height);
            break;
          }
    }
  }

  // Méthode d'assignation de sprite
  void sprite() {
    if (a_random == 1) image(a_tab1[a_boucle], a_posx, a_posy, a_width, a_height);
    if (a_random == 2) image(a_tab2[a_boucle], a_posx, a_posy, a_width, a_height);
    if (a_random == 3) image(a_tab3[a_boucle], a_posx, a_posy, a_width, a_height);
    if (a_random == 4) image(a_tab4[a_boucle], a_posx, a_posy, a_width, a_height);
  }
}
